---
import { app } from "../firebase/server";
import { getFirestore } from "firebase-admin/firestore";

import Layout from '../layouts/Layout.astro';
import RecipeList from '../components/RecipeList.tsx';

import { contentfulClient } from "../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { EntryFieldTypes } from "contentful";

interface Page {
  contentTypeId: "page",
  fields: {
    pathname: EntryFieldTypes.Text,
		pageTitle: EntryFieldTypes.Text,
		mainParagraph: EntryFieldTypes.Text,
		fancyContent: EntryFieldTypes.RichText,
  }
}

const pages = await contentfulClient.getEntries<Page>({
  content_type: "page",
});

const currentPage = pages.items.filter((page) => page.fields.pathname === 'recipes')[0];
const { fields } = currentPage;
const {
	pathname,
	pageTitle,
	mainParagraph,
	fancyContent,
} = fields;

interface Recipe {
  id: string;
  name: string;
  description: string;
  ingredients: string;
}

// db for user
const db = getFirestore(app);

// db for recipes
const recipesRef = db.collection("recipes");
const recipesSnapshot = await recipesRef.get();
const recipes = recipesSnapshot.docs.map((doc: any) => ({
  id: doc.id,
  ...doc.data(),
})) as Recipe[];
---
<main>
	<Layout title="Recipe Storage Bin - Recipes">
		<h1>Recipes</h1>
		<p>Here are the recipes we have stored in the database so far:</p>
		{mainParagraph && (
			<p>{mainParagraph}</p>
		)}
		{fancyContent && (
			<article set:html={documentToHtmlString(fancyContent)}></article>
		)}
		<RecipeList 
			recipes={recipes}
		/>
	</Layout>
</main>

<style>
html, body {
	margin: 0;
	padding: 0;
}
</style>
